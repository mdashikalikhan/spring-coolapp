#server.port=8181
management.endpoints.web.exposure.include=*
management.info.env.enabled=true
#management.security.enabled = true


#management.endpoints.web.exposure.exclude=info, health

#spring.security.user.name=${SECURED_USER}
#spring.security.user.password=${SECURED_PWD}

server.port=8181

server.servlet.context-path=/funapp

info.app.name=Spring Boot Cool Application
info.app.description=Innovation and testing app, just enjoy
info.app.version=1.0.0.1

info.deadline=unlimited


logging.level.web=DEBUG

api.casa.account=/casaAccountOpen

api.postTransaction=/PostTransaction


#spring.main.lazy-initialization=true

spring.datasource.url=jdbc:mysql://localhost:3306/student_tracker
spring.datasource.username=root
spring.datasource.password=root

# Turn off the spring boot banner
spring.main.banner-mode=off

# Reduce logging level to WARN
logging.level.root=warn

# Add logging configs to display SQL statements
logging.level.org.hibernate.sql=debug
logging.level.org.hibernate.orm.jdbc.bind=trace
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.jdbc.core=trace

# hibernate auto-create
spring.jpa.hibernate.ddl-auto=update

#External URL by resilence service
external.URL1=http://www.myservice.com

#Resilence Service configuration
resilience4j.circuitbreaker.instances.externalService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.externalService.waitDurationInOpenState=60s
resilience4j.circuitbreaker.instances.externalService.slidingWindowSize=15
resilience4j.circuitbreaker.instances.externalService.minimumNumberOfCalls=10


spring.kafka.bootstrap-servers=172.17.231.148:1080
#spring.kafka.consumer.group-id=my-group1
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.template.default-topic=my-topic
spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer

spring.data.rest.base-path=/rest-api
spring.data.rest.default-page-size=2

#application data

districts=Barguna,Barishal,Bhola,Jhalokati,Dhaka,Potuakhali,Faridpur,Sylhet,Lakshmipur,Manikganj,Noakhali,Rangamati,Rajshahi,Khulna, Narail

languages=Java,C++,Go,Python

systems=Microsoft Windows,Linux,macOS,Android OS, iOS



